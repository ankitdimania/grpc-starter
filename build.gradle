description = 'Grpc API'

subprojects {
    apply plugin: 'checkstyle'
    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
        mavenLocal()
    }

    [compileJava, compileTestJava].each() {
        it.options.compilerArgs += ["-Xlint:all", "-Xlint:-options"]
        it.options.encoding = "UTF-8"
    }

    compileTestJava {
        // serialVersionUID is basically guaranteed to be useless in our tests
        options.compilerArgs += ["-Xlint:-serial"]
    }

    jar.manifest {
        attributes('Implementation-Title': name,
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-JDK': System.getProperty('java.version'),
                'Source-Compatibility': sourceCompatibility,
                'Target-Compatibility': targetCompatibility)
    }

    javadoc.options {
        encoding = 'UTF-8'
        links 'https://docs.oracle.com/javase/8/docs/api/'
    }

    dependencies {
        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-core:1.10.19'
    }

    checkstyle {
        configFile = file("$rootDir/checkstyle.xml")
        toolVersion = '6.17'
        ignoreFailures = false
        if (rootProject.hasProperty('checkstyle.ignoreFailures')) {
            ignoreFailures = rootProject.properties['checkstyle.ignoreFailures'].toBoolean()
        }
        configProperties['rootDir'] = rootDir
    }

    checkstyleMain {
        source = fileTree(dir: 'src/main', include: "**/*.java")
    }

    checkstyleTest {
        source = fileTree(dir: 'src/test', include: "**/*.java")
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }
}
